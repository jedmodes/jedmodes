# Style sheet for tm documentation
# Copyright (c) 2004 Paul Boekholt
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2, or (at your option)
# any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; see the file COPYING.  If not, write to
# the Free Software Foundation, 59 Temple Place - Suite 330,
# Boston, MA 02111-1307, USA.

style slangtm is

written by "Paul Boekholt <p.boekholt@hetnet.nl>"
version is 1.0
requires a2ps version 4.12

documentation is 
"This is for pretty printing tm documentation.  TM is the literate"
"programming tool of John E. Davis.  It's used for documenting the source"
"code of S-Lang, JED and slrn, as well as JED's S-Lang library. S-Lang"
"comes with the tools sl2tm and tm2txt which extract the TM docs from the"
"source and convert it to text.  The resulting text file can be browsed"
"from JED with the hyperhelp mode.  Or, you can extract the tm with sl2tm"
"and convert to postscript with a2ps and this stylesheet.  The tm for JED's"
"S-Lang library is in the source; for JED's intrinsic functions it's in the"
"dirctory doc/tm/rtl in the JED source distribution; for S-Lang's intrinsic"
"functions it's in doc/tm/cref.tm (strip the linuxdoc macros first).  There"
"is also supposed to be a tm-utils package at http://jedsoft.org that can"
"convert tm to SGML with some additional macros, which you would use to"
"convert the S-Lang manual to SGML"
end documentation

# add this line to your sheets.map:
# slangtm: /*.tm/

first alphabet is
"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz\\{}#_"
second alphabet is
"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz_"
case sensitive


sequences are
  #  /^\\\\variable{/ Invisible Label_strong } Invisible,
  #  /^\\\\function{/ Invisible Label_strong } Invisible,
  /^#v\\+/ Invisible Plain /^#v-/ Invisible,
  /^#c __FILE__.*/ Invisible,
  
  # next two create some whitespace between entries
  /^#c __LINE.*/ Invisible /$/,
  /^\\\\done/ Invisible /$/
end sequences

# The sections of a tm entry.
keywords in Label are
  # TM entry is either a variable or a function.
  (/^\\\\variable{(.*)}/ "variable ", \2 Label_strong),
  (/^\\\\function{(.*)}/ "function ", \2 Label_strong),
  (/^\\\\description/ description),
  (/^\\\\example/ example),
  (/^\\\\notes/ notes),
  (/^\\\\seealso{(.*)}/ "see also ", \2 Plain),
  (/^\\\\synopsis{(.*)}/ "synopsis ", \2 Plain),
  (/^\\\\usage{(.*)}/ "usage ", \2 Plain)
end keywords


# These are taken from tm2txt.c.  Em is obvious, var is used in JED's
# documentation, the others?
sequences are
  "\\svar{" Invisible Keyword } Invisible,
  "\\cvar{" Invisible Keyword } Invisible,
  "\\ivar{" Invisible Keyword } Invisible,
  "\\sfun{" Invisible Keyword } Invisible,
  "\\cfun{" Invisible Keyword } Invisible,
  "\\ifun{" Invisible Keyword } Invisible,
  "\\exmp{" Invisible String } Invisible
  # this works in that \exmp{if (foo) \{bar;\} } is correctly highlighted, but
  # it doesn't "eat" the "\"
  exceptions are
    "\\\\", "\\\{", "\\\}" 
  end exceptions,
  "\\fun{" Invisible Keyword } Invisible,
  "\\par{" Invisible Keyword } Invisible,
  "\\var{" Invisible Keyword } Invisible,
  "\\em{" Invisible Keyword_strong } Invisible
end sequences

end style

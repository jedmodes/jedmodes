*outline mode   -*- mode: outline; Outline_Indent: 0 -*-
Outline mode turns JED into a powerful, fast, easy to use outliner.
Outlining is basically a computer-aided form of mind-mapping.  This file
you're reading is in outline format.  As you may have guessed by now,
the asterisks impose a hierarchical structure on the document.
**elements of a JED outline
An Emacs outline is basically just headers, and body text.
***headings
Lines that start with an asterisks are top-level headings.  Two asterisks
are subheadings.  Three are subsubheadings, etc.  To start a branch, just
hit '*' at the beginning of a line.  JED will trim whitespace and insert
a sibling of the previous heading.  To promote or demote it, delete or
add '*'s.
***body text
These are some extensions of the Emacs outline format.
****lists
Lines that start with '-' are list items.
 - You can type a space after the '-' to get a more aesthetically pleasing
   layout.
 - When the line wraps, the next line is indented to the level of the
   previous line, skipping any '-' chars.
 - If the previous line has wrapped, you have to back up manually to start
   a new list item or to end the list.
****verbatim
Text between '#v+' and '#v-' is treated as verbatim text by [outline2html].
****hyperlinks
Text in square brackets is treated as a hyperlink. See the 
section [mouse hooks].
****wormholes
If there are other .otl files in the buffer's directory, the file's name
sans the .otl extension acts as a hyperlink to the file.
**differences between outline mode and folding mode
***outline is a major mode
Folding is a minor mode, that adds folding keybindings to a major mode. Fold
marks are mode-dependent and appear to the major mode as comments. Outline
is a major mode, and headings are simply asterisks at the beginning of a
line.  Emacs' outline.el does provide a minor mode.
***outlines do not have end markers
With folding, a fold is delimited by a beginning and an end marker. Outlines
only have begin headers.  An outline-minor mode could outline many kinds
of structured text without any need for special markers - but hasn't been
written yet for JED.
***outline does not narrow
We only hide, and unhide regions under headings
***keybindings are different
Unfortunately, the keymaps of outline mode and folding mode are
incompatible.  Outline's keymap is based on Emacs' outline keymap. The
only key that is similar is 'C-c C-s' for unhiding a fold/branch.
**the outline mode keymap
Substitute your value of `_Reserved_Key_Prefix' for `C-c'.
   
   `C-c C-d' hide subtree
   
   `C-c C-s' show subtree
   
   `C-c C-c' hide body under this heading
   
   `C-c C-e' show body of this heading
   
   `C-c C-k' show all headings under this heading
  
   `C-c C-t' hide everything in buffer except headings
   	With prefix, hide headings with level > arg
   
   `C-c C-l' hide everything under this heading except headings
   
   `C-c C-o' hide other stuff except toplevel headings
   
   `C-c C-a' show everything in this buffer
    	
   `C-c C-n' next heading
   
   `C-c C-p' previous heading
   
   `C-c C-f' next heading this level
   
   `C-c C-b' previous heading this level
   
   `C-c C-u' up level
   
   When the cursor is positioned directly on the bullet character of a
   heading, regular characters invoke the commands of the corresponding
   outline-mode keymap control chars.  For example, `f' would invoke
   `outline_forward_same_level', etc.
   
   `C-c TAB' show children of this heading
   
   `M-Up' move tree up
      moves the current topic and its offspring up over its ancestors to
      the younger sibling of its parent, or something.
  
   `M-Down' move tree down

**mouse hooks
   Right clicking cycles show nothing -> show headers -> show all
   
   Clicking on [heading text] jumps to that heading
   
   Names of other .otl files show up as keywords, left clicking opens them

**custom variables
***Outline_Indent
   The custom variable `Outline_Indent' determines if bodies should be
   indented beyond the asterisks, giving a hanging_indent_look, like in
   this branch.
***Outline2html_Begin_Level
Determines at what level headings should begin when converting an outline
to html.  If this is set to 1, a level 1 heading is translated to a level
2 html heading, etc.  Default is 0.
**the parsep hook
Paragraph separators are headings, empty lines, lines starting with a '-'
and lines starting with '#v+' or #v-. These are converted to headings,
paragraph separators, list elements and verbatim delimiters by
[outline2html].
**other cool things to try
***outline2html
Convert your outline to html, and go on editing it in html mode.  Or you can
use AFT, since the outline format is (almost) a subset of the AFT format.
***using outline functions in AFT mode
You can use outline's navigation and selective display functions in AFT mode
by replacing the make_keymap() with a copy_keymap().
***html2outline
You can convert a html file to outline format with html2text by writing
these lines in your .html2textrc:
#v+
H1.prefix=* 
H2.prefix=** 
H3.prefix=*** 
H4.prefix=**** 
H5.prefix=***** 
H6.prefix=****** 

H1.suffix=
H2.suffix=
H3.suffix=
H4.suffix=
H5.suffix=
H6.suffix=

UL.default_types=CUSTOM2
#v-
***rolo
You can use an outline to organise your contacts, or anything else that can
be organised in a hierarchical way.  Opening the outline and typing

#v+
M-x rolo_grep<RET> pattern<RET>
#v-

will selectively display those branches that match the pattern.
**caveats
See fold.txt, section 'caveats'
